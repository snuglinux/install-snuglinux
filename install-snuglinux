#! /bin/bash

CURRENT_VERSION=0.0.12
INSTALL_PREFIX=/usr
BASE_NAME=`basename "$0"`
REAL_ARCH=$(uname -m)
CONFIG_FILE=/etc/install-snuglinux.conf
PO_DIR=${INSTALL_PREFIX}/share/snuglinux
TMP_DIR=/tmp/snuglinux

#=======================================
ping_server() {
  show_message PING_SERVER $SNUG_SERVER
  res=1
  /bin/ping ${SNUG_SERVER} -c 3 > /dev/null 2>&1 && res=0
  if [ ${res} -ne 0 ]; then
     show_message NOT_ACCESS_SERVER $SNUG_SERVER
     exit 1
  else
     show_message OK
  fi
}

system_language



if ! [ -f ${PO_DIR}/install-snuglinux.func ]; then
  case $lang in
       ru) echo -e "\e[31mОшибка:\e[0m не найден файл install-snuglinux.func в '${PO_DIR}'!!!";;
       uk) echo -e "\e[31mПомилка:\e[0m не знайдений файл install-snuglinux.func у '${PO_DIR}'!!!";;
       *)  echo -e "\e[31mError:\e[0m file install-snuglinux.func not found in '${PO_DIR}'!!!";;
  esac
  exit 1
else
   . ${PO_DIR}/install-snuglinux.func
fi


set_options $*

if [[ $EUID -ne 0 ]]; then
   show_message I_M_NOT_ROOT
   exit 1
fi

ping_server
if [ "$?" = 1 ]; then
   exit 1;
fi

if ! [ -d "$TMP_DIR" ]; then
   mkdir "$TMP_DIR"
fi
exit
wget --quiet --tries=3 -c https://github.com/snuglinux/install-snuglinux/master/install-snuglinux.func -P $TMP_DIR
wget --quiet --tries=3 -c https://github.com/snuglinux/install-snuglinux/master/install-snuglinux.func -P $TMP_DIR


pacman -Sy

NOT_INSTALL_PKG=$(not_installed_pkg "arch-install-scripts wget sed")
if [ -n "$NOT_INSTALL_PKG" ] ; then
   show_message PACKAGE_NOT_INSTALLED "$NOT_INSTALL_PKG"
   exit 1;
fi

select_type

preparation_disk

edit_pacman_conf "/etc/pacman.conf"

show_message INSTALLING_BASIC_PACKAGES
pacstrap /mnt base
if [ "$?" != 0 ]; then
   show_message FAILED_INSTALL_PACKAGE "base"
   exit 1;
fi

system_language "/mnt"

edit_pacman_conf "/mnt/etc/pacman.conf"

install_type

install_video_driver

install_network_manager

generating_fstab

creating_bootable_ram_disk

install_grub

enter_localtime

enter_hostname

set_password_user "root"

add_users

show_message PRESS_ANY_KEY_TO_REBOOT
read
reboot